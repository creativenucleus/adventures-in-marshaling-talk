Adventures in Marshalling
Golang North East
22 Oct 2015

James Rutherford
creativenucleus
@jtruk
creativenucleus.com

* Overview

- A basic introduction to marshalling
- What's magic about it?
- interface{}
- Reflection
- ```struct:"tags"```
- Some examples!

* What is Marshalling?

Re-encoding some data in another format.

(Typically encoding a Go struct in another format)

* Examples

- json (StdLib: encoding/json)
- xml (StdLib: encoding/xml)
- mgo (bson)
- sqlx driver (Marshal to and from rows)

The opposite of Marshal() is Unmarshal().

* What's Good about Marshalling?

Straightforward interface.

Mapping between fields of one data type and another.

Sensible default behaviour.

Ability to override.

Conceptually nice - push and pull your structures into the required format for:

- Web API
- Communication between your services

"Assemble and arrange (a group of people, especially troops) in order"

You're the sheriff of data town!

* What Does Marshalling look like?

.code examples/1.go

* Marshalling Example

.play examples/2.go

* Marshalling with Struct Tags

.play examples/3.go

* What's Magic about Marshalling?

Nothing!

It's just a term that's been adopted across packages.

And it's predisposed to utilise jazzy things, like:

- interface{}
- Struct tags

And, to make both of those work:

- REFLECTION!

* interface{}

The 'empty interface'

    func Marshal(v interface{}) ([]byte, error)
    
Matches all types, for example:

- string
- int
- etc...

But for marshalling, most useful for:

- struct

* Now We Have a Handle But We Don't Know What the Door Looks Like?

How do we do anything useful with interface{}?

Reflection!

Allows interrogation and traversal of structures.

* Example

.play examples/4.go

* Example

.play examples/5.go

* Example

.play examples/6.go

* Example

.play -edit examples/7.go

* Struct Tags

Declarations on your fields.

.code examples/8.go

These too can be inspected by reflection.

* Example

.play examples/9.go

* interface{}, Reflection and Struct Tags

Put them all together!

Morse Marshaller

[[https://github.com/creativenucleus/marshalling-morse]]

Input Validation Example

[[https://github.com/creativenucleus/inputvalidation]]

* With Great Power

:)

* Some Good Reading

Overview of reflection in Go by someone whose brain is the size of a planet:

[[http://blog.golang.org/laws-of-reflection][Rob Pike (Go Blog) - Laws of Reflection]]

Handling flexible JSON structures and the custom marshalling of structures:

[[http://attilaolah.eu/2013/11/29/json-decoding-in-go/][Attila Oláh - JSON Decoding in Go]]

Adding, removing fields, compositing structs, splitting objects, renaming fields:

[[http://attilaolah.eu/2014/09/10/json-and-struct-composition-in-go/][Attila Oláh - JSON and struct composition in Go]]

* Other Fun

Join me at [[http://www.dotgo.eu/][DotGo]] in Paris [[https://bit.ly/dotgo][(with discount for savvy Gophers!... bit.ly/dotgo)]]